# --- 集合 ---
set 可变,会去除str中的重复项
frozenset
集合比较<是包含于的意思,交&并|差补(前面有后面没有)- 对称差分(对方没有的)^
集合也有内建函数

# --- SciPy ---
ndarray
ufun = universal function

# --- numpy ---
from numpy import  *
print zeros((2, 2)), ones((2,2))
print arange(1, 5, 0.5)
>>> [ 1.   1.5  2.   2.5  3.   3.5  4.   4.5]
a = np.array([(1, 2, 3), (4, 5, 6), (7, 8, 9)])
print a[[2]].sum()

sin(array)
array.reshape()
array.sum([axis])
where(array0 > x, array1, array2)
fromfunction(fun,sequence)

ufun = universal function
np.add.accumulate([]) #向后加
np.multiple.accumulate([]) #向后乘

# series 类似一位数组的对象，由数据和索引组成
print Series([1, 2.0, 'a'])
# ame属性 NaN-not a number

#  DATAFrame-一个表格型数据结构，共享同一个index的series集合
print sorted(set('You need Python.'))  # 还有空格和字符在前面呢

# --- pandas ---
from pandas import Series, DataFrame
data = {'language': ['Java', 'PHP', 'Python', 'R', 'C#'],
            'year': [ 1995 ,  1995 , 1991   ,1993, 2000]}
frame = DataFrame(data)
frame['IDE'] = Series(['Intellij', 'Notepad', 'IPython', 'R studio', 'VS'])
print frame
print frame.ix[2]
>>>  language  year       IDE
0     Java  1995  Intellij
1      PHP  1995   Notepad
2   Python  1991   IPython
3        R  1993  R studio
4       C#  2000        VS

language     Python
year           1991
IDE         IPython
Name: 2, dtype: object

sa = Series(['a', 'b', 'c'], index = [0, 1, 2])
sb = Series(['a', 'b', 'c'])
sc = Series(['a', 'c', 'b'])
print sa
print sa.equals(sc)
print sb.equals(sa)
>>>0    a
1    b
2    c
dtype: object
False
True

# 内建函数对内存进行了操作
